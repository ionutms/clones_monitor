name: Monitor Repository Clones and Update Traffic Data

on:
  schedule:
    - cron: '0 13 * * *'
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  monitor-traffic:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout clones_monitor repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags
      
    - name: Setup GitHub CLI
      uses: sersoft-gmbh/setup-gh-cli-action@v2.0.1
      
    - name: Fetch clone and visitor statistics
      env:
        GH_TOKEN: ${{ secrets.TRAFIC_UPDATE_TOKEN }}
      run: |
        # Ensure clone CSV exists with header if it doesn't
        if [ ! -f clones_history.csv ]; then
          echo "clone_timestamp,total_clones,unique_clones" > clones_history.csv
        fi
        
        # Ensure visitors CSV exists with header if it doesn't
        if [ ! -f visitors_history.csv ]; then
          echo "visitor_timestamp,total_visitors,unique_visitors" > visitors_history.csv
        fi
        
        # Repository to monitor
        repo="ionutms/KiCAD_Symbols_Generator"
        
        # Fetch clones for the main branch and append to clone CSV
        gh api "repos/$repo/traffic/clones?per_page=100&ref=main" | \
        jq -r '
          .clones |
          map([
            (.timestamp | sub("T.*";"") | sub("Z$";"")) ,
            .count,
            .uniques
          ] | @csv)[]
        ' >> clones_history.csv
        
        # Fetch visitors for the main branch and append to visitors CSV
        gh api "repos/$repo/traffic/views?per_page=100&ref=main" | \
        jq -r '
          .views |
          map([
            (.timestamp | sub("T.*";"") | sub("Z$";"")) ,
            .count,
            .uniques
          ] | @csv)[]
        ' >> visitors_history.csv
    
    - name: Remove duplicate rows from CSVs
      run: |
        # Process clone CSV
        echo "clone_timestamp,total_clones,unique_clones" > clones_history_fixed.csv
        awk '
          BEGIN { FS=OFS="," }
          NR==1 && $1 == "clone_timestamp" { next }
          { data[$1] = $0 }
          END {
            for (timestamp in data) {
              print data[timestamp]
            }
          }
        ' clones_history.csv | sort -t, -k1 >> clones_history_fixed.csv
        mv clones_history_fixed.csv clones_history.csv
        
        # Process visitors CSV
        echo "visitor_timestamp,total_visitors,unique_visitors" > visitors_history_fixed.csv
        awk '
          BEGIN { FS=OFS="," }
          NR==1 && $1 == "visitor_timestamp" { next }
          { data[$1] = $0 }
          END {
            for (timestamp in data) {
              print data[timestamp]
            }
          }
        ' visitors_history.csv | sort -t, -k1 >> visitors_history_fixed.csv
        mv visitors_history_fixed.csv visitors_history.csv
    
    - name: Commit and push traffic data to clones_monitor
      run: |
        git config user.name 'GitHub Actions Bot'
        git config user.email '<>'
        
        # Stage both CSV files
        git add clones_history.csv visitors_history.csv
        
        # Check if there are any changes to commit
        if [[ -n $(git status -s) ]]; then
          git commit -m "Update clone and visitor statistics for $(date -u +"%Y-%m-%d %H:%M:%S")"
          git pull --rebase origin main
          git push origin main
        else
          echo "No new traffic data to update"
        fi

  update-kicad-repo-traffic:
    needs: monitor-traffic
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout clones_monitor repository
      uses: actions/checkout@v4
      with:
        repository: ionutms/clones_monitor
        path: clones_monitor
        token: ${{ secrets.TRAFIC_UPDATE_TOKEN }}
    
    - name: Checkout KiCAD Symbols Generator repository
      uses: actions/checkout@v4
      with:
        repository: ionutms/KiCAD_Symbols_Generator
        path: kicad-repo
        token: ${{ secrets.TRAFIC_UPDATE_TOKEN }}
    
    - name: Create repo_traffic_data directory and copy CSV files
      run: |
        # Ensure repo_traffic_data directory exists
        mkdir -p kicad-repo/repo_traffic_data
        
        # Copy existing CSV files from clones_monitor to repo_traffic_data
        cp clones_monitor/clones_history.csv kicad-repo/repo_traffic_data/clones_history.csv
        cp clones_monitor/visitors_history.csv kicad-repo/repo_traffic_data/visitors_history.csv
        
        # Create a timestamp file to track the last update
        date -u +"%Y-%m-%d %H:%M:%S" > kicad-repo/repo_traffic_data/last_update.txt
    
    - name: Commit and push traffic data to KiCAD repository
      working-directory: kicad-repo
      run: |
        git config user.name 'GitHub Actions Bot'
        git config user.email '<>'
        
        # Stage files in the repo_traffic_data directory
        git add repo_traffic_data/*
        
        # Check if there are any changes to commit
        if [[ -n $(git status -s repo_traffic_data) ]]; then
          git commit -m "Update clone and visitor statistics for $(date -u +"%Y-%m-%d %H:%M:%S")"
          git pull --rebase origin main
          git push origin main
        else
          echo "No new traffic data to update"
        fi